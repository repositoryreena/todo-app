body {
  font-family: "Courier New", Courier, monospace; /* Set the font to Courier New */
  background-color: #f0f0f0;
  color: #333;
  padding: 20px;
  display: flex;
  flex-direction: column;
  align-items: center;
  font-size: 18px; /* Increase font size for better readability */
}

/* General button styling */
button {
  background-color: #76c7c0; /* Pastel teal */
  border: none;
  border-radius: 30px; /* Rounded corners */
  padding: 15px 30px; /* Increase padding for larger buttons */
  color: white;
  font-size: 20px; /* Make the font size bigger */
  font-family: "Courier New", Courier, monospace; /* Ensure button uses Courier New */
  cursor: pointer;
  margin: 15px;
  transition: background-color 0.3s ease;
}

input {
  border-radius: 30px; /* Rounded corners */
  padding: 15px 30px;
  font-size: 20px; /* Make the font size bigger */
  font-family: "Courier New", Courier, monospace; /* Ensure button uses Courier New */
  cursor: pointer;
  margin: 15px;
  transition: background-color 0.3s ease;
}

button:hover {
  background-color: #66b1ad; /* Slightly darker teal */
}

/* General dropdown styling */
select {
  border: none;
  background-color: #ffffff;
  border-radius: 30px;
  padding: 15px 20px; /* Increase padding for larger dropdowns */
  font-size: 20px; /* Make the font size bigger */
  font-family: "Courier New", Courier, monospace; /* Ensure dropdown uses Courier New */
  color: #333;
  margin: 15px;
  cursor: pointer;
  box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
}

/* Styling for the dropdown options with pastel rainbow colors */
/* General dropdown styling */
select {
  border: none;
  background-color: #ffffff;
  border-radius: 30px;
  padding: 15px 20px;
  font-size: 20px;
  font-family: "Courier New", Courier, monospace;
  color: #333;
  margin: 15px;
  cursor: pointer;
  box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
}

/* Dynamic pastel rainbow colors for dropdown options */
/* The nth-child(6n+1) selector is a CSS trick to create a repeating cycle for the colors. It applies the background color to every 6th item in the list, starting from the first. */

select option:nth-child(6n + 1) {
  background-color: #ffb3ba; /* Pastel pink */
}

select option:nth-child(6n + 2) {
  background-color: #ffdfba; /* Pastel orange */
}

select option:nth-child(6n + 3) {
  background-color: #ffffba; /* Pastel yellow */
}

select option:nth-child(6n + 4) {
  background-color: #baffc9; /* Pastel green */
}

select option:nth-child(6n + 5) {
  background-color: #bae1ff; /* Pastel blue */
}

select option:nth-child(6n + 6) {
  background-color: #d6a7ff; /* Pastel purple */
}

/* Additional styling for the container */
.container {
  display: flex;
  flex-direction: column;
  align-items: center;
  margin-top: 20px;
}

/* Additional styling for the dropdown labels */
label {
  font-size: 22px; /* Make the labels larger for better readability */
  font-weight: bold;
  color: #333;
  margin-bottom: 10px;
  margin-top: 25px;
}

/* Increase text size of task list items */
#task-list li {
  font-size: 20px; /* Increase size of task text */
  padding: 15px;
  margin: 10px 0;
  display: flex;
  justify-content: space-between;
  align-items: center;
  background-color: #fff;
  border-radius: 10px;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
}

/* Style task text */
#task-list li span {
  font-size: 20px; /* Larger font for task text */
}

/* Style task buttons */
#task-list li button {
  font-size: 20px; /* Larger buttons */
}

/* Style for the task list items */
.task-item {
  display: flex;
  align-items: center;
  margin-bottom: 10px;
}

/* Optional: style for the other spans (text, priority, etc.) */
span {
  margin-right: 10px;
}

/* Style for the circle with checkmark */
/* When the task is completed, apply the rainbow gradient to the task item */
.task-item.completed {
  background: linear-gradient(
    135deg,
    #ffb3ba,
    #ffdfba,
    #ffffba,
    #baffc9,
    #bae1ff,
    #d6a7ff
  ); /* Rainbow gradient */
  transition: background 0.3s ease; /* Smooth transition for the background */
}

/* For the checkmark itself when it's checked */
.task-item.completed .checkmark.checked {
  color: green; /* Green checkmark color */
  font-size: 24px; /* Larger checkmark */
  transition:
    color 0.3s ease,
    font-size 0.3s ease; /* Smooth transition for color and size */
}

/* Styling for the checkmark */
.checkmark {
  font-size: 18px; /* Size of the checkmark (adjusted to fit the circle) */
  color: white; /* Color of the checkmark */
  display: none; /* Initially hidden */
  margin: 0; /* Remove any margin or extra space */
}

/* When the task is completed, show the checkmark */
.checkmark.checked {
  display: inline-block; /* Show the checkmark when checked */
  color: green; /* Green color for completed task */
  border-radius: 50%;
}

/* Apply rainbow gradient to the whole body when a task is completed */

/* background-size: 100% 100%: This ensures the gradient spans the entire body and doesn't repeat. It covers the entire page area in one single stretch. */
/* Apply rainbow gradient to the whole body when a task is completed */
body.rainbow-gradient {
  background: linear-gradient(
    135deg,
    #ffb3ba,
    #ffdfba,
    #ffffba,
    #baffc9,
    #bae1ff,
    #d6a7ff
  ); /* Rainbow gradient */
  background-size: 100% 100%; /* Make the gradient cover the whole screen */
  background-attachment: fixed; /* Fix the gradient so it doesn't scroll with the page */
  transition: background 0.3s ease; /* Smooth transition for the background */
}

/* Style for the bubble appearance of priority and category */
/* Styling for the bubbles around priority and category */
.bubble {
  display: inline-block;
  padding: 8px 16px;
  margin: 5px;
  border-radius: 20px;
  font-size: 14px;
  font-weight: bold;
  color: white;
}

/* Priority bubbles - colored based on priority */
/* Priority bubbles */
/* Bubbles for priority */
.bubble.priority {
  padding: 8px 16px;
  border-radius: 20px;
  font-size: 14px;
  font-weight: bold;
  color: black; /* Black text for readability */
  text-shadow: none; /* Remove any shadow to make the text clear */
}

/* For low priority (green) */
.bubble.priority.low {
  background-color: #60b83f; /* Green background */
}

/* For normal priority (yellow) */
.bubble.priority.medium {
  background-color: #f2d35f; /* Yellow background */
  color: black; /* Ensure black text on yellow background */
}

/* For critical priority (red) */
.bubble.priority.high {
  background-color: #f15b5b; /* Red background */
  color: black; /* Ensure black text */
}

/* Bubbles for category */
.bubble.category {
  padding: 8px 16px;
  border-radius: 20px;
  font-size: 14px;
  font-weight: bold;
  color: black; /* Black text for readability */
  text-shadow: none; /* Remove shadow to make the text clear */
  background-color: transparent; /* Ensure no transparency */
}

/* Specific color for categories based on index */
.bubble.category:nth-child(6n + 1) {
  background-color: #ffb3ba; /* Pastel pink */
}

.bubble.category:nth-child(6n + 2) {
  background-color: #ffdfba; /* Pastel orange */
}

.bubble.category:nth-child(6n + 3) {
  background-color: #ffffba; /* Pastel yellow */
}

.bubble.category:nth-child(6n + 4) {
  background-color: #baffc9; /* Pastel green */
}

.bubble.category:nth-child(6n + 5) {
  background-color: #bae1ff; /* Pastel blue */
}

.bubble.category:nth-child(6n + 6) {
  background-color: #d6a7ff; /* Pastel purple */
}

body.task-checked {
  background: linear-gradient(
    90deg,
    #ffb3ba,
    #ffdfba,
    #ffffba,
    #baffc9,
    #bae1ff,
    #d6a7ff
  );
  background-size: 300% 300%; /* Ensures the gradient stretches across */
  animation: rainbow-background 3s ease-out forwards; /* Add animation for smooth transition */
}

/* Keyframes for the rainbow animation */
@keyframes rainbow-background {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

/* Styling for the priority dropdown */
select#priority-input {
  background-color: #fff;
  color: #333;
  font-size: 20px;
  border-radius: 30px;
  padding: 15px 30px;
  cursor: pointer;
  margin: 15px;
  font-family: "Courier New", Courier, monospace;
  box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
}

/* Style for the header row */
.task-header {
  font-weight: bold;
  background-color: #f7f7f7; /* Light background for header */
  padding: 10px 20px;
  display: flex;
  justify-content: space-between; /* Align columns */
  border-bottom: 2px solid #ddd; /* Add a bottom border to separate header */
}

.task-header span {
  width: 20%; /* Equal column width */
  text-align: center; /* Center-align text */
}

/* Style for the header row */
.task-header {
  font-weight: bold;
  background-color: #f7f7f7; /* Light background for header */
  padding: 10px 20px;
  display: flex;
  justify-content: space-between; /* Align columns */
  border-bottom: 2px solid #ddd; /* Add a bottom border to separate header */
}

.task-header span {
  width: 20%; /* Equal column width */
  text-align: center; /* Center-align text */
}

/* Style for the task items */
.task-item {
  display: flex;
  justify-content: space-between; /* Align columns */
  padding: 10px 20px;
  border-bottom: 1px solid #ddd; /* Add bottom border for task items */
}

.task-item span {
  width: 20%; /* Equal column width */
  text-align: center; /* Center-align text under each column */
}

/* Adjust the checkmark and delete button so they are aligned */
.delete-btn {
  text-align: center;
  width: 10%;
}

/* Optional: Style the checkmark and delete button */

.delete-btn {
  display: flex;
  justify-content: center;
  cursor: pointer;
}

/* Style for the header row */
.task-header {
  font-weight: bold;
  background-color: #f7f7f7; /* Light background for header */
  padding: 10px 20px;
  display: flex;
  justify-content: space-between; /* Align columns */
  border-bottom: 2px solid #ddd; /* Add a bottom border to separate header */
}

.task-header span {
  width: 16%; /* Adjusting for 5 columns now */
  text-align: center; /* Center-align text */
}

/* Style for the task items */
.task-item {
  display: flex;
  justify-content: space-between; /* Align columns */
  padding: 10px 20px;
  border-bottom: 1px solid #ddd; /* Add bottom border for task items */
}

.task-item span {
  width: 16%; /* Adjusting for 5 columns */
  text-align: center; /* Center-align text under each column */
}

/* Style the checkmark container */

.checkmark-container .checkmark {
  font-size: 18px;
  color: #4caf50; /* Green color for checkmark */
  display: none; /* Initially hidden */
}

.checkmark-container .checkmark.checked {
  display: block; /* Show when checked */
}

/* Style for the delete button */
.delete-btn {
  cursor: pointer;
  background: none;
  border: none;
  font-size: 18px;
  color: #f44336; /* Red color for delete button */
}

/* Adjust the delete button container */
.delete-btn-container {
  width: 30px;
  text-align: center;
}

/* Optional: Style the checkmark and delete button */
.delete-btn-container {
  display: flex;
  justify-content: center;
  align-items: center;
}

/* Ensure the task container stays aligned properly */
.task-item span,
.delete-btn-container {
  text-align: center;
}

/* Style for the header row */
.task-header {
  font-weight: bold;
  background-color: #f7f7f7; /* Light background for header */
  padding: 10px 20px;
  display: flex;
  justify-content: space-between; /* Align columns */
  border-bottom: 2px solid #ddd; /* Add a bottom border to separate header */
}

.task-header span {
  width: 16%; /* Adjusting for 6 columns now */
  text-align: center; /* Center-align text */
}

/* Style for the task items */
.task-item {
  display: flex;
  justify-content: space-between; /* Align columns */
  padding: 10px 20px;
  border-bottom: 1px solid #ddd; /* Add bottom border for task items */
}

.task-item span {
  width: 16%; /* Adjusting for 6 columns */
  text-align: center; /* Center-align text under each column */
}

/* Style the checkmark container */

.checkmark-container .checkmark {
  font-size: 18px;
  color: #4caf50; /* Green color for checkmark */
  display: none; /* Initially hidden */
}

.checkmark-container .checkmark.checked {
  display: block; /* Show when checked */
}

/* Style for the delete button */
.delete-btn {
  cursor: pointer;
  background: none;
  border: none;
  font-size: 18px;
  color: #f44336; /* Red color for delete button */
}

/* Adjust the delete button container */
.delete-btn-container {
  width: 30px;
  text-align: center;
}

/* Optional: Style the checkmark and delete button */
.delete-btn-container {
  display: flex;
  justify-content: center;
  align-items: center;
}

/* Ensure the task container stays aligned properly */
.task-item span,
.delete-btn-container {
  text-align: center;
}

/* Style the checkmark container */

/* Checkmark styling when it's checked */
.checkmark-container .checkmark {
  font-size: 16px; /* Adjust font size to fit better in the circle */
  color: #4caf50; /* Green color for the checkmark */
  display: none; /* Hidden by default */
}

/* When the task is completed, show the checkmark */
.checkmark-container .checkmark.checked {
  display: block; /* Show the checkmark when checked */
}

/* Ensure the checkmark container circle displays the checkmark correctly */

/* Ensure checkmark is visible when checked */
.checkmark-container .checkmark {
  font-size: 16px; /* Adjust font size to fit better in the circle */
  color: #4caf50; /* Green color for the checkmark */
  display: none; /* Initially hidden */
}

/* When the task is completed, show the checkmark */
.checkmark-container .checkmark.checked {
  display: inline-block; /* Show the checkmark when checked */
  color: #4caf50; /* Green color for checkmark */
}

.checkmark {
  font-size: 20px;
  z-index: 2; /* Make sure the checkmark is on top of the inner circle */
  color: #4caf50; /* Green color for the checkmark */
}

/* Adjust the task item spans to allow text wrapping within each column */
.task-item span {
  word-wrap: break-word; /* Ensure words break and wrap within the column */
  white-space: normal; /* Allow the text to wrap naturally */
  overflow-wrap: break-word; /* Modern way to ensure word wrapping */
  width: auto; /* Allow column width to adjust based on content */
  text-align: center; /* Center align text within each column */
}

/* Adjust the columns (task item spans) for proper wrapping */
.task-header span,
.task-item span {
  word-wrap: break-word; /* Allow words to break and wrap inside each column */
  white-space: normal; /* Allow normal text wrapping */
  overflow-wrap: break-word; /* Break long words */
  width: 16%; /* Or adjust this percentage to suit your layout */
  text-align: center; /* Center align text in each column */
}

/* Optional: Add a max-width for task name to limit the width of long names */
.task-item .task-name {
  word-wrap: break-word;
  overflow-wrap: break-word;
  white-space: normal;
  width: 100%; /* Let it fill up the available space */
  max-width: 200px; /* You can adjust the max-width as needed */
}

/* Ensure the task item list doesn't overflow and no horizontal scrollbar */
#task-list {
  width: 100%; /* Ensure the task list uses the full width */
  overflow-x: hidden; /* Prevent horizontal scrolling */
  display: flex;
  flex-direction: column;
  align-items: stretch; /* Stretch the task items across the container */
}

/* Make sure the task item container (columns) doesn’t overflow */
.task-item {
  display: flex;
  justify-content: space-between; /* Distribute columns evenly */
  padding: 10px 20px;
  border-bottom: 1px solid #ddd;
  width: 100%; /* Ensure task items take up full width */
  box-sizing: border-box; /* Include padding and border in width calculation */
  flex-wrap: wrap; /* Allow task items to wrap if necessary */
}

/* Ensure that the task item spans allow wrapping */
.task-item span {
  word-wrap: break-word; /* Allow words to break and wrap */
  white-space: normal; /* Allow text to wrap naturally */
  overflow-wrap: break-word; /* Ensure long words break correctly */
  width: 16%; /* Adjust percentage or use auto for flexible width */
  text-align: center; /* Center-align text */
  box-sizing: border-box; /* Prevent overflow */
  min-width: 100px; /* Optional: Set a min-width for each column */
}

/* Ensure the checkmark container doesn’t overflow and allows wrapping */

/* Ensure no horizontal overflow when text overflows within the task name */
.task-item .task-name {
  word-wrap: break-word; /* Allow text to break */
  overflow-wrap: break-word;
  white-space: normal; /* Allow the text to wrap */
  width: 100%; /* Allow the task name to fill available space */
  max-width: calc(100% - 60px); /* Adjust to prevent overflow with checkmark */
}

/* Ensure the task item list doesn't overflow and no horizontal scrollbar */
#task-list {
  width: 100%; /* Ensure the task list uses the full width */
  overflow-x: hidden; /* Prevent horizontal scrolling */
  display: flex;
  flex-direction: column;
  align-items: stretch; /* Stretch the task items across the container */
}

/* Make sure the task item container (columns) doesn’t overflow */
.task-item {
  display: flex;
  justify-content: space-between; /* Distribute columns evenly */
  padding: 10px 20px;
  border-bottom: 1px solid #ddd;
  width: 100%; /* Ensure task items take up full width */
  box-sizing: border-box; /* Include padding and border in width calculation */
  flex-wrap: wrap; /* Allow task items to wrap if necessary */
}

/* Ensure that the task item spans allow wrapping */
.task-item span {
  word-wrap: break-word; /* Allow words to break and wrap */
  white-space: normal; /* Allow text to wrap naturally */
  overflow-wrap: break-word; /* Ensure long words break correctly */
  flex-basis: 16%; /* Allow flexibility with width of each column */
  flex-grow: 1; /* Allow columns to grow and adjust based on content */
  min-width: 100px; /* Prevent columns from becoming too small */
  max-width: 25%; /* Prevent columns from stretching too wide */
  text-align: center; /* Center-align text */
  box-sizing: border-box; /* Prevent overflow */
}

/* Ensure the checkmark container doesn’t overflow and allows wrapping */

/* Ensure no horizontal overflow when text overflows within the task name */
.task-item .task-name {
  word-wrap: break-word; /* Allow text to break */
  overflow-wrap: break-word;
  white-space: normal; /* Allow the text to wrap */
  flex-grow: 1; /* Allow this column to expand if necessary */
  max-width: calc(100% - 60px); /* Adjust to prevent overflow with checkmark */
  padding: 0 5px;
}

/* Prevent horizontal scrollbar */
html,
body {
  overflow-x: hidden; /* Prevents horizontal overflow */
  width: 100%; /* Ensures that the width is 100% of the viewport */
  margin: 0; /* Resets default margins */
  padding: 0; /* Resets default padding */
  box-sizing: border-box; /* Prevents overflow due to padding/border */
}

/* Reduce width of each column slightly */
.task-header span,
.task-item span {
  width: 14%; /* Reduce column width slightly */
  text-align: center; /* Center-align text under each column */
}

/* Optional: Reduce padding/margin */
.task-item {
  padding: 8px 16px; /* Reduce padding */
}

/* Ensure the checkmark container fits properly */

* {
  box-sizing: border-box; /* Include padding and borders within element width */
  margin: 0;
  padding: 0;
}

body {
  overflow-x: hidden; /* Hide horizontal scrollbar */
  padding: 10px;
}

.container {
  display: flex;
  flex-wrap: wrap; /* Allow items to wrap if necessary */
}

.task-header span,
.task-item span {
  width: 14%; /* Adjust width to make them narrower */
  max-width: 180px; /* Limit the maximum width of each column */
  min-width: 100px; /* Ensure columns don't get too small */
  text-align: center;
  padding: 5px;
}

/* Optionally, make the font smaller and ensure no horizontal overflow */
.task-item {
  font-size: 14px;
  padding: 10px 15px;
  max-width: 100%; /* Ensure no item overflows the container */
}

@media (max-width: 768px) {
  .task-header span,
  .task-item span {
    width: 100%; /* Stack columns on smaller screens */
  }

  .task-item {
    font-size: 12px; /* Reduce font size for mobile */
  }
}

/* Style for the checkmark container */

/* Ensure the checkmark container is centered properly */
.checkmark-container {
  width: 30px; /* Fixed width for the checkmark circle */
  height: 30px; /* Fixed height for the checkmark circle */
  border-radius: 50%; /* Make it circular */
  background-color: #fff; /* White background */
  display: flex;
  justify-content: center; /* Center the checkmark horizontally */
  align-items: center; /* Center the checkmark vertically */
  cursor: pointer; /* Pointer cursor for click */
  margin-right: 10px;
  position: relative; /* Ensure positioning for the checkmark */
}

/* Style for the inner circle */
.inner-circle {
  width: 24px; /* Adjust the size to be smaller inside the outer circle */
  height: 24px; /* Adjust the size to be smaller inside the outer circle */
  border-radius: 50%; /* Make it circular */
  background-color: #d3d3d3; /* Light gray background */
  position: absolute; /* Position it inside the checkmark container */
  z-index: 1; /* Keep it behind the checkmark */
}

/* Checkmark styles */
.checkmark {
  font-size: 16px; /* Adjust font size to fit better inside the circle */
  color: #4caf50; /* Green color for the checkmark */
  position: absolute; /* Position it inside the circle */
  z-index: 2; /* Ensure the checkmark is on top of the inner circle */
  display: none; /* Initially hide the checkmark */
}

/* When the task is completed, show the checkmark */
.checkmark.checked {
  display: block; /* Show the checkmark when checked */
  color: #4caf50; /* Green color for checkmark */
}

/* Pastel-colored bubbles for priority */
.bubble.priority.low {
  background-color: #a8d8d8; /* Pastel light teal for low priority */
  color: #2d4a4a; /* Darker teal text for contrast */
}

.bubble.priority.medium {
  background-color: #f1c6a4; /* Pastel peach for medium priority */
  color: #5a3c1d; /* Darker brownish text */
}

.bubble.priority.high {
  background-color: #f7c1b5; /* Pastel pink for high priority */
  color: #a74b4c; /* Darker red for text */
}

/* Pastel-colored bubbles for categories */
.bubble.category {
  background-color: #d1a6ff; /* Pastel lavender for category bubbles */
  color: #3e2a8c; /* Darker purple text */
}

/* Pastel colors for the category dropdown options */
select option {
  background-color: #d8c7f5; /* Light pastel purple for dropdown options */
  color: #5e3c7e; /* Darker purple for text */
}

/* Pastel colors for the "SHOW" dropdown (categories) */
#show-dropdown {
  background-color: #e5d3f3; /* Very light pastel purple for the dropdown background */
  color: #5e3c7e; /* Darker purple text */
}

#priority-input option[value="Critical"] {
  background-color: #ffd6d6; /* Very light pastel red */
}

#priority-input option[value="Normal"] {
  background-color: #ffffe0; /* Very light pastel yellow */
}

#priority-input option[value="Low"] {
  background-color: #d9ffd9; /* Very light pastel green */
}

#show-dropdown option[value=""] {
  background-color: #f0f0f0; /* Light gray pastel color */
  color: #555; /* Darker text for contrast */
}

#order-dropdown option {
  background-color: #f0f0f0; /* Light pastel gray */
  color: #555; /* Darker text for contrast */
}

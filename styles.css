body {
    font-family: 'Courier New', Courier, monospace; /* Set the font to Courier New */
    background-color: #f0f0f0;
    color: #333;
    padding: 20px;
    display: flex;
    flex-direction: column;
    align-items: center;
    font-size: 18px;  /* Increase font size for better readability */
}

/* General button styling */
button {
    background-color: #76c7c0;  /* Pastel teal */
    border: none;
    border-radius: 30px;  /* Rounded corners */
    padding: 15px 30px;  /* Increase padding for larger buttons */
    color: white;
    font-size: 20px;  /* Make the font size bigger */
    font-family: 'Courier New', Courier, monospace;  /* Ensure button uses Courier New */
    cursor: pointer;
    margin: 15px;
    transition: background-color 0.3s ease;
}

input {
    border-radius: 30px;  /* Rounded corners */
    padding: 15px 30px;
    font-size: 20px;  /* Make the font size bigger */
    font-family: 'Courier New', Courier, monospace;  /* Ensure button uses Courier New */
    cursor: pointer;
    margin: 15px;
    transition: background-color 0.3s ease;
}

button:hover {
    background-color: #66b1ad;  /* Slightly darker teal */
}

/* General dropdown styling */
select {
    border: none;
    background-color: #ffffff;
    border-radius: 30px;
    padding: 15px 20px;  /* Increase padding for larger dropdowns */
    font-size: 20px;  /* Make the font size bigger */
    font-family: 'Courier New', Courier, monospace;  /* Ensure dropdown uses Courier New */
    color: #333;
    margin: 15px;
    cursor: pointer;
    box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
}

/* Styling for the dropdown options with pastel rainbow colors */
/* General dropdown styling */
select {
    border: none;
    background-color: #ffffff;
    border-radius: 30px;
    padding: 15px 20px;
    font-size: 20px;
    font-family: 'Courier New', Courier, monospace;
    color: #333;
    margin: 15px;
    cursor: pointer;
    box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
}

/* Dynamic pastel rainbow colors for dropdown options */
/* The nth-child(6n+1) selector is a CSS trick to create a repeating cycle for the colors. It applies the background color to every 6th item in the list, starting from the first. */

select option:nth-child(6n+1) {
    background-color: #ffb3ba; /* Pastel pink */
}

select option:nth-child(6n+2) {
    background-color: #ffdfba; /* Pastel orange */
}

select option:nth-child(6n+3) {
    background-color: #ffffba; /* Pastel yellow */
}

select option:nth-child(6n+4) {
    background-color: #baffc9; /* Pastel green */
}

select option:nth-child(6n+5) {
    background-color: #bae1ff; /* Pastel blue */
}

select option:nth-child(6n+6) {
    background-color: #d6a7ff; /* Pastel purple */
}


/* Additional styling for the container */
.container {
    display: flex;
    flex-direction: column;
    align-items: center;
    margin-top: 20px;
}

/* Additional styling for the dropdown labels */
label {
    font-size: 22px;  /* Make the labels larger for better readability */
    font-weight: bold;
    color: #333;
    margin-bottom: 10px;
    margin-top: 25px;
}

/* Increase text size of task list items */
#task-list li {
    font-size: 20px; /* Increase size of task text */
    padding: 15px;
    margin: 10px 0;
    display: flex;
    justify-content: space-between;
    align-items: center;
    background-color: #fff;
    border-radius: 10px;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
}

/* Style task text */
#task-list li span {
    font-size: 20px; /* Larger font for task text */
}

/* Style task buttons */
#task-list li button {
    font-size: 20px; /* Larger buttons */
}

/* Style for the task list items */
.task-item {
    display: flex;
    align-items: center;
    margin-bottom: 10px;
}


/* Optional: style for the other spans (text, priority, etc.) */
span {
    margin-right: 10px;
}

/* Style for the circle with checkmark */
/* Style for the circle with checkmark */
/* When the task is completed, apply the rainbow gradient to the task item */
.task-item.completed {
    background: linear-gradient(135deg, #ffb3ba, #ffdfba, #ffffba, #baffc9, #bae1ff, #d6a7ff); /* Rainbow gradient */
    transition: background 0.3s ease;  /* Smooth transition for the background */
}

/* For the checkmark itself when it's checked */
.task-item.completed .checkmark.checked {
    color: green;  /* Green checkmark color */
    font-size: 24px;  /* Larger checkmark */
    transition: color 0.3s ease, font-size 0.3s ease;  /* Smooth transition for color and size */
}


/* Styling for the checkmark circle */
.checkmark-container {
    width: 30px; /* Width of the circle */
    height: 30px; /* Height of the circle */
    border-radius: 50%; /* Make it circular */
    background-color: lightgray; /* Gray background for the circle */
    display: flex; /* Use flexbox to center content */
    justify-content: center; /* Center the checkmark horizontally */
    align-items: center; /* Center the checkmark vertically */
    margin-right: 10px; /* Space between circle and task text */
    cursor: pointer;
}

/* Styling for the checkmark */
.checkmark {
    font-size: 18px; /* Size of the checkmark (adjusted to fit the circle) */
    color: white; /* Color of the checkmark */
    display: none; /* Initially hidden */
    margin: 0; /* Remove any margin or extra space */
}

/* When the task is completed, show the checkmark */
.checkmark.checked {
    display: inline-block; /* Show the checkmark when checked */
    color: green; /* Green color for completed task */
    border-radius: 50%;

}

/* Apply rainbow gradient to the whole body when a task is completed */
/* Apply rainbow gradient to the whole body when a task is completed */

/* background-size: 100% 100%: This ensures the gradient spans the entire body and doesn't repeat. It covers the entire page area in one single stretch. */
/* Apply rainbow gradient to the whole body when a task is completed */
body.rainbow-gradient {
    background: linear-gradient(135deg, #ffb3ba, #ffdfba, #ffffba, #baffc9, #bae1ff, #d6a7ff); /* Rainbow gradient */
    background-size: 100% 100%; /* Make the gradient cover the whole screen */
    background-attachment: fixed; /* Fix the gradient so it doesn't scroll with the page */
    transition: background 0.3s ease; /* Smooth transition for the background */
}

/* Style for the bubble appearance of priority and category */
/* Styling for the bubbles around priority and category */
.bubble {
    display: inline-block;
    padding: 8px 16px;
    margin: 5px;
    border-radius: 20px;
    font-size: 14px;
    font-weight: bold;
    color: white;
}

/* Priority bubbles - colored based on priority */
/* Priority bubbles */
/* Bubbles for priority */
/* Bubbles for priority */
.bubble.priority {
    padding: 8px 16px;
    border-radius: 20px;
    font-size: 14px;
    font-weight: bold;
    color: black; /* Black text for readability */
    text-shadow: none; /* Remove any shadow to make the text clear */
}

/* For low priority (green) */
.bubble.priority.low {
    background-color: #60B83F; /* Green background */
}

/* For normal priority (yellow) */
.bubble.priority.medium {
    background-color: #F2D35F; /* Yellow background */
    color: black;  /* Ensure black text on yellow background */
}

/* For critical priority (red) */
.bubble.priority.high {
    background-color: #F15B5B; /* Red background */
    color: black; /* Ensure black text */
}

/* Bubbles for category */
.bubble.category {
    padding: 8px 16px;
    border-radius: 20px;
    font-size: 14px;
    font-weight: bold;
    color: black; /* Black text for readability */
    text-shadow: none; /* Remove shadow to make the text clear */
    background-color: transparent; /* Ensure no transparency */
}

/* Specific color for categories based on index */
.bubble.category:nth-child(6n+1) {
    background-color: #ffb3ba; /* Pastel pink */
}

.bubble.category:nth-child(6n+2) {
    background-color: #ffdfba; /* Pastel orange */
}

.bubble.category:nth-child(6n+3) {
    background-color: #ffffba; /* Pastel yellow */
}

.bubble.category:nth-child(6n+4) {
    background-color: #baffc9; /* Pastel green */
}

.bubble.category:nth-child(6n+5) {
    background-color: #bae1ff; /* Pastel blue */
}

.bubble.category:nth-child(6n+6) {
    background-color: #d6a7ff; /* Pastel purple */
}



body.task-checked {
    background: linear-gradient(90deg, 
        #ffb3ba, 
        #ffdfba, 
        #ffffba, 
        #baffc9, 
        #bae1ff, 
        #d6a7ff);
    background-size: 300% 300%; /* Ensures the gradient stretches across */
    animation: rainbow-background 3s ease-out forwards; /* Add animation for smooth transition */
}

/* Keyframes for the rainbow animation */
@keyframes rainbow-background {
    0% {
        background-position: 0% 50%;
    }
    50% {
        background-position: 100% 50%;
    }
    100% {
        background-position: 0% 50%;
    }
}

/* Styling for the priority dropdown */
select#priority-input {
    background-color: #fff;
    color: #333;
    font-size: 20px;
    border-radius: 30px;
    padding: 15px 30px;
    cursor: pointer;
    margin: 15px;
    font-family: 'Courier New', Courier, monospace;
    box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
}

/* Set the background color for each priority option */
select#priority-input option[value="Critical"] {
    background-color: #F15B5B; /* Red background for critical */
    color: black; /* Black text */
}

select#priority-input option[value="Normal"] {
    background-color: #F2D35F; /* Yellow background for normal */
    color: black; /* Black text */
}

select#priority-input option[value="Low"] {
    background-color: #60B83F; /* Green background for low */
    color: black; /* Black text */
}